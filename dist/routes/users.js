"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const UsersController_1 = __importDefault(require("../Controllers/v1/UsersController"));
const UserFilesController_1 = require("../Controllers/v1/UserFilesController");
const authJwt_1 = require("../Middlewares/authJwt");
const authUser_1 = require("../Middlewares/authUser");
const validateFiles_1 = require("../Middlewares/validateFiles");
const router = express_1.Router();
const USER = new UsersController_1.default();
const USER_IMG_FILE = new UserFilesController_1.UserImgFilesController();
const USER_MIMG_FILE = new UserFilesController_1.UserMainImgFilesController();
router.get('/users', USER.index);
router.get('/users/:id', USER.show);
router.post('/users', authJwt_1.authAdmin, USER.post);
router.put('/users/:id', [authJwt_1.authUser, authUser_1.authUser], USER.update);
router.delete('/users/:id', authJwt_1.authAdmin, USER.delete);
router.get('/users/:id/skills', USER.indexSkills);
router.get('/users/:id/jobs', USER.indexJobs);
router.get('/users/:id/projects', USER.indexProjects);
router.put('/users/:id/password', [authJwt_1.authUser, authUser_1.authUser], USER.updatePassword);
router.post('/users/:id/img', [authJwt_1.authUser, authUser_1.authUser, validateFiles_1.validateFiles], (req, res) => USER_IMG_FILE.post(req, res));
router.put('/users/:id/img', [authJwt_1.authUser, authUser_1.authUser, validateFiles_1.validateFiles], (req, res) => USER_IMG_FILE.update(req, res));
router.delete('/users/:id/img', [authJwt_1.authUser, authUser_1.authUser], (req, res) => USER_IMG_FILE.delete(req, res));
router.post('/users/:id/main_img', [authJwt_1.authUser, authUser_1.authUser, validateFiles_1.validateFiles], (req, res) => USER_MIMG_FILE.post(req, res));
router.put('/users/:id/main_img', [authJwt_1.authUser, authUser_1.authUser, validateFiles_1.validateFiles], (req, res) => USER_MIMG_FILE.update(req, res));
router.delete('/users/:id/main_img', [authJwt_1.authUser, authUser_1.authUser], (req, res) => USER_MIMG_FILE.delete(req, res));
exports.default = router;
